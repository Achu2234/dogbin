Private property of Exodus: 25630@nortia

jetbrains.exodus.io.LockingManager.lock(LockingManager.java:108)
jetbrains.exodus.io.LockingManager.lock(LockingManager.java:56)
jetbrains.exodus.io.FileDataWriter.lock(FileDataWriter.kt:97)
jetbrains.exodus.log.Log.tryLock(Log.kt:796)
jetbrains.exodus.log.Log.<init>(Log.kt:120)
jetbrains.exodus.env.Environments.newLogInstance(Environments.java:142)
jetbrains.exodus.env.Environments.newLogInstance(Environments.java:121)
jetbrains.exodus.env.Environments.newLogInstance(Environments.java:105)
jetbrains.exodus.env.Environments.newInstance(Environments.java:60)
kotlinx.dnq.store.container.EntityStoreHelperKt.createTransientEntityStore(EntityStoreHelper.kt:33)
kotlinx.dnq.store.container.StaticStoreContainer.init(StaticStoreContainer.kt:36)
kotlinx.dnq.store.container.StaticStoreContainer.init$default(StaticStoreContainer.kt:35)
dog.del.data.base.Database.<init>(Database.kt:18)
dog.del.app.ApplicationKt$module$2$appModule$1$1.invoke(Application.kt:37)
dog.del.app.ApplicationKt$module$2$appModule$1$1.invoke(Application.kt)
org.koin.core.instance.DefinitionInstance.create(DefinitionInstance.kt:54)
org.koin.core.instance.SingleDefinitionInstance.get(SingleDefinitionInstance.kt:40)
org.koin.core.definition.BeanDefinition.resolveInstance(BeanDefinition.kt:70)
org.koin.core.scope.Scope.resolveInstance(Scope.kt:165)
org.koin.core.scope.Scope.get(Scope.kt:128)
dog.del.app.ApplicationKt$module$4$2.invokeSuspend(Application.kt:83)
dog.del.app.ApplicationKt$module$4$2.invoke(Application.kt)
ktor_health_check.CheckMapBuilderKt$toFunction$1.invokeSuspend(CheckMapBuilder.kt:9)
ktor_health_check.CheckMapBuilderKt$toFunction$1.invoke(CheckMapBuilder.kt)
ktor_health_check.HandleKt.healthCheck(Handle.kt:24)
ktor_health_check.Health$addInterceptor$1.invokeSuspend(Health.kt:44)
ktor_health_check.Health$addInterceptor$1.invoke(Health.kt)
io.ktor.util.pipeline.SuspendFunctionGun.loop(PipelineContext.kt:268)
io.ktor.util.pipeline.SuspendFunctionGun.access$loop(PipelineContext.kt:67)
io.ktor.util.pipeline.SuspendFunctionGun.proceed(PipelineContext.kt:141)
io.ktor.features.ContentNegotiation$Feature$install$1.invokeSuspend(ContentNegotiation.kt:106)
io.ktor.features.ContentNegotiation$Feature$install$1.invoke(ContentNegotiation.kt)
io.ktor.util.pipeline.SuspendFunctionGun.loop(PipelineContext.kt:268)
io.ktor.util.pipeline.SuspendFunctionGun.access$loop(PipelineContext.kt:67)
io.ktor.util.pipeline.SuspendFunctionGun.proceed(PipelineContext.kt:141)
io.ktor.util.pipeline.SuspendFunctionGun.execute(PipelineContext.kt:161)
io.ktor.util.pipeline.Pipeline.execute(Pipeline.kt:27)
io.ktor.server.testing.TestApplicationEngine$callInterceptor$1.invokeSuspend(TestApplicationEngine.kt:275)
io.ktor.server.testing.TestApplicationEngine$callInterceptor$1.invoke(TestApplicationEngine.kt)
io.ktor.server.testing.TestApplicationEngine$2.invokeSuspend(TestApplicationEngine.kt:47)
io.ktor.server.testing.TestApplicationEngine$2.invoke(TestApplicationEngine.kt)
io.ktor.util.pipeline.SuspendFunctionGun.loop(PipelineContext.kt:268)
io.ktor.util.pipeline.SuspendFunctionGun.access$loop(PipelineContext.kt:67)
io.ktor.util.pipeline.SuspendFunctionGun.proceed(PipelineContext.kt:141)
io.ktor.util.pipeline.SuspendFunctionGun.execute(PipelineContext.kt:161)
io.ktor.util.pipeline.Pipeline.execute(Pipeline.kt:27)
io.ktor.server.testing.TestApplicationEngine$handleRequest$pipelineJob$1.invokeSuspend(TestApplicationEngine.kt:273)
kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
kotlinx.coroutines.DispatchedTask.run(Dispatched.kt:241)
kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:594)
kotlinx.coroutines.scheduling.CoroutineScheduler.access$runSafely(CoroutineScheduler.kt:60)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:740)
